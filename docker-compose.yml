version: '3.8'

services:

  poco-server:
    build: 
      context: ./poco_app
      args:
        ARG_USE_FIND_POSTGRES_CMAKE: ${USE_FIND_POSTGRES_CMAKE}
    ports:
      - "${POCO_SERVER_PORT}:${POCO_SERVER_PORT}"
    environment:
      POSTGRES_USER_NAME: ${POSTGRES_USER_NAME}
      POSTGRES_USER_PASSWORD: ${POSTGRES_USER_PASSWORD}
      POSTGRES_DB_NAME: ${POSTGRES_DB_NAME}
      POSTGRES_DB_HOST: ${POSTGRES_DB_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POCO_SERVER_PORT: ${POCO_SERVER_PORT}
    depends_on:
      - db
    networks:
      default:
        ipv4_address: 172.16.1.5

  db:
    image: postgres:15.0-alpine
    container_name: postgresql
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_PASSWORD: ${POSTGRES_USER_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER_NAME}
      PGDATA: /pgdata 
    restart: always
    volumes:
      - ./data/postgres_init/init.sql:/docker-entrypoint-initdb.d/init.sql # инициализация SQL-ом
      - ./data/postgres_data:/pgdata
    networks:
      default:
        ipv4_address: ${POSTGRES_DB_HOST}
    stdin_open: true # docker run -i


networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.1.0/24